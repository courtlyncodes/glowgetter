name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Set up Android SDK (manual)
        run: |
            mkdir -p $HOME/android-sdk/cmdline-tools/latest
            mv $HOME/android-sdk/tools/bin/* $HOME/android-sdk/cmdline-tools/latest/

      - name: Set environment variables
        run: |
                export ANDROID_HOME=$HOME/android-sdk
                export PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$PATH
                echo "export ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
                echo "export PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV

      - name: Accept Android SDK licenses
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

          # Rest of your existing steps...
     

      - name: Install Android SDK components
        run: |
          $ANDROID_HOME/cmdline-tools/bin/sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3" "system-images;android-30;google_apis;x86_64" "emulator"

      - name: Create and start emulator
        run: |
          echo "no" | avdmanager create avd -n test -k "system-images;android-30;google_apis;x86_64" --force
          $ANDROID_HOME/emulator/emulator -avd test -no-window -no-audio -no-boot-anim &
          adb wait-for-device
          adb shell input keyevent 82

      - name: Wait for emulator to boot
        run: |
          adb wait-for-device
          adb shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'

      - name: Run unit tests
        run: ./gradlew test

      - name: Run instrumented tests
        run: ./gradlew connectedAndroidTest

      - name: Stop the emulator
        run: adb -s emulator-5554 emu kill
